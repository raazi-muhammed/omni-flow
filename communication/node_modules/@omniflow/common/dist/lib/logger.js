"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = void 0;
const winston_1 = __importDefault(require("winston"));
const load_env_1 = require("./load-env");
const config_1 = require("winston/lib/winston/config");
const { combine, printf, timestamp, label, colorize } = winston_1.default.format;
const myFormat = printf(({ level, message, label, timestamp }) => {
    return `${timestamp} [${label}] ${level}: ${message}`;
});
const { SERVER_NAME } = (0, load_env_1.loadEnv)(["SERVER_NAME"]);
(0, config_1.addColors)({
    http: "italic gray",
});
exports.logger = winston_1.default.createLogger({
    level: "silly",
    format: combine(colorize(), label({ label: SERVER_NAME }), timestamp({ format: "HH:mm:ss" }), myFormat),
    transports: [],
});
if (process.env.NODE_ENV !== "production") {
    exports.logger.add(new winston_1.default.transports.Console());
    exports.logger.add(new winston_1.default.transports.Console({
        level: "error",
        format: combine(timestamp(), myFormat),
    }));
}
