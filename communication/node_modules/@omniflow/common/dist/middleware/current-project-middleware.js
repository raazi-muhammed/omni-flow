"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const adapt_request_1 = require("../lib/adapt-request");
function buildVerifyProjectMiddleware({ token, }) {
    return (expressReq, res, next) => __awaiter(this, void 0, void 0, function* () {
        try {
            const req = (0, adapt_request_1.adaptRequest)(expressReq);
            const tokenData = req.headers.project;
            if (!tokenData || typeof tokenData !== "string") {
                throw new Error("Not token found");
            }
            token.validate(tokenData);
            const decodedTokenData = yield token.verify(tokenData);
            if (!decodedTokenData)
                throw new Error("Invalid token data");
            // @ts-ignore
            expressReq.currentProject = decodedTokenData
                ? decodedTokenData
                : undefined;
            next();
        }
        catch (error) {
            next(error);
        }
    });
}
exports.default = buildVerifyProjectMiddleware;
